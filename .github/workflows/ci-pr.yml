# Unique name for this workflow
name: CI on PR

# Definition when the workflow should run
on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, synchronize, reopened]
    branches-ignore:
      - prerelease/spring[2-9][0-9]
      - prerelease/summer[2-9][0-9]
      - prerelease/winter[2-9][0-9]

# Jobs to be executed
jobs:
  format-lint-lwc-tests:
    runs-on: ubuntu-latest
    steps:
      # Checkout the source code
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # Install Volta to enforce proper node and package manager versions
      - name: "Install Volta"
        uses: volta-cli/action@v1

      # Install npm dependencies for Prettier and Jest
      - name: "Install npm dependencies"
        run: npm ci && npm run ci:postinstall

      # Prettier formatting
      - name: "Code formatting verification with Prettier"
        run: npm run prettier:verify

      # Lint LWC
      - name: "Lint Lightning Web Components"
        run: npm run lint

      # LWC unit tests
      - name: "Unit test Lightning Web Components"
        run: npm run test:unit:coverage

      # Upload code coverage data
      - name: "Upload code coverage for LWC to Codecov.io"
        uses: codecov/codecov-action@v2.0.2
        with:
          flags: LWC

  # Auto merge Dependabot PRs for:
  # - patch updates on prod dependencies
  # - minor updates on dev dependencies
  dependabot-auto-merge:
    # Only run for Dependabot PRs
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    needs: format-lint-lwc-tests
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: "Fetch Dependabot metadata"
        id: dependabot
        uses: dependabot/fetch-metadata@v1.3.1

      - name: "Check auto merge conditions"
        id: auto-merge
        if: |
          (
            steps.dependabot.outputs.update-type == 'version-update:semver-patch' &&
            contains('direct:production,indirect:production', steps.dependabot.outputs.dependency-type)
          ) || (
            steps.dependabot.outputs.update-type == 'version-update:semver-minor' &&
            contains('direct:development,indirect:development', steps.dependabot.outputs.dependency-type)
          )
        run: echo "::notice ::auto-merge conditions satisfied"

      - name: "Approve and merge PR"
        if: ${{ steps.auto-merge.conclusion == 'success' }}
        run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --auto --rebase "$PR_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}
